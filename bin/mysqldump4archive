#! /bin/bash
# bash for fancy job control

# It started off as a quick hack script...
#
#
# - We could collect *.sql.md5 together in one file
# - Should run more in parallel (we are limited first by IO, then DB, then CPU)
# - Safer writing to files?


# List of databases to process (on one server)
DBLIST=$*

# Database credentials - override from the incoming environment
: ${dbhost:=otterpipe2}
: ${dbport:=3303}
: ${dbuser:=ottro}
: ${dbpass:=""}

: ${OUTDIR:=.}
: ${BZIP:=pbzip2 -l -9}


set -e
set -m
echo "Will archive for each FOO in ($DBLIST) to $OUTDIR/FOO.*"

job_mopup() {
    local jobrun jobwhat joberr

    jobrun="$( jobs -lr  | sed -e 's/^/  /' )"
    if [ -n "$jobrun" ]; then
        printf "  jobs are running, wait...\n%s\n" "$jobrun"
    fi

    echo "  job cleanup"
    for j in $( jobs | perl -ne 'print " \%$1 " if m{^\s*\[(\d+)\]}' ); do
        jobwhat="$( jobs -l $j )"
        echo "    fg $j : $jobwhat"
        if wait $j; then
            echo "      OK"
        else
            joberr=$?
            printf "job %s (%s) failed: %s\n" $j "$jobwhat" $joberr >&2
            exit $joberr
        fi
    done
}

main() {
# set -x
    for dbinst in $DBLIST; do
        echo "Archive $dbinst into $dbinst.{sql.bz2,log,sql.md5,tmd5}"

        if [ -s "$OUTDIR/$dbinst.sql.bz2" ]; then
            echo "  Already dumped"
            ls -lhrt "$OUTDIR/$dbinst".* | sed -e 's/^/    /'
        else
            do_dump $dbinst
        fi
    done

    job_mopup

    for dbinst in $DBLIST; do
        chmod -c a-w $OUTDIR/$dbinst.*
    done
}

do_dump() {
    local dbinst
    dbinst="$1"

    echo "  dumping..."
    mysqldump -h$dbhost -P$dbport -u$dbuser -p$dbpass \
	--opt --allow-keywords -i --flush-privileges --lock-tables --routines \
	--log-error $dbinst.log \
	--databases $dbinst | tee $OUTDIR/$dbinst.sql | md5sum | perl -pe 'BEGIN { $fn=shift } s/  -$/  $fn/' $dbinst.sql > $OUTDIR/$dbinst.sql.md5

#    echo "  mk-table-checksum..."
#    ssh deskpro \
#	mk-table-checksum --algorithm BIT_XOR --chunksize 50000 -d $dbinst h=$dbhost,P=$dbport,u=$dbuser,p=$dbpass > $OUTDIR/$dbinst.tmd5
    # it's not installed on cbi4, perhaps should be

    job_mopup

    $BZIP $OUTDIR/$dbinst.sql &
    echo "  started compression $OUTDIR/$dbinst.sql on pid $!"
}

main "$@"

# Checking compressed files (bash oneliner)
#
# for foo in *.sql.bz2; do bzcat $foo | md5sum | perl -e '$_=<STDIN>; s/-$/$ARGV[0]/; s/\.bz2$//; print' $foo; done
